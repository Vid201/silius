on:
  push:
    branches:
      - main

name: Create and publish a Docker image

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Git Tag
        run: echo "tags=$(git describe --tags)" >> $GITHUB_OUTPUT
        id: tag

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: org.opencontainers.image.source=https://github.com/${{ env.IMAGE_NAME }}
          
      - name: Set lower case Docker image name
        run: |
          echo "IMAGE_NAME_LC=${IMAGE_NAME,,}" >>${GITHUB_ENV}

      - name: Fetch third-party dependencies
        run: |
          make fetch-thirdparty
  
      - name: Setup Yarn cache - submodule "thirdparty/account-abstraction"
        uses: actions/setup-node@v3
        with:
          node-version: '16.17'
          cache: 'yarn'
          cache-dependency-path: crates/contracts/thirdparty/account-abstraction
  
      - name: Setup Yarn cache - submodule "thirdparty/bundler"
        uses: actions/setup-node@v3
        with:
          node-version: '16.17'
          cache: 'yarn'
          cache-dependency-path: tests/thirdparty/bundler
        
      - name: Setup third-party dependencies
        run: |
          make setup-thirdparty

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LC }}:${{ steps.tag.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
